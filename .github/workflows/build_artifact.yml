name: Build and Publish Artifacts

on:
  workflow_dispatch

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: installpython39
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out ../dist -m Cargo.toml --interpreter ${{ steps.installpython39.outputs.python-path }}
      - name: Install built wheel
        run: |
          pip install megalinref --no-index --find-links dist --force-reinstall
          python -c "import megalinref"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ../dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
        #, i686]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      id: installpython39lin
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out ../dist -m Cargo.toml --interpreter ${{ steps.installpython39lin.outputs.python-path }}
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install megalinref --no-index --find-links dist --force-reinstall
        python -c "import megalinref"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ../dist

  # linux-cross:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       target: [aarch64, armv7, s390x, ppc64le, ppc64]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - name: Build wheels
  #     uses: messense/maturin-action@v1
  #     with:
  #       target: ${{ matrix.target }}
  #       manylinux: auto
  #       args: --release --out dist -m Cargo.toml
  #   - uses: uraimo/run-on-arch-action@v2.0.5
  #     if: matrix.target != 'ppc64'
  #     name: Install built wheel
  #     with:
  #       arch: ${{ matrix.target }}
  #       distro: ubuntu20.04
  #       githubToken: ${{ github.token }}
  #       install: |
  #         apt-get update
  #         apt-get install -y --no-install-recommends python3 python3-pip
  #         pip3 install -U pip
  #       run: |
  #         pip3 install megalinref --no-index --find-links dist/ --force-reinstall
  #         python3 -c "import megalinref"
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: wheels
  #       path: dist
